user nginx;

# Configure error log
error_log stderr warn;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {

    client_body_temp_path /tmp/client_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    proxy_temp_path /tmp/proxy_temp;
    scgi_temp_path /tmp/scgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;

	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Don't tell nginx version to the clients. Default is 'on'.
	server_tokens off;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write(). Default is off.
	sendfile on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames. Default is 'off'.
	tcp_nopush on;

	# Enable gzipping of responses.
	gzip on;
	gzip_proxied any;
	# Set the Vary HTTP header as defined in the RFC 2616. Default is 'off'.
	gzip_vary on;

	# Helper variable for proxying websockets.
	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}

	# Configure access log
	access_log off;

	server {
        listen 8080 default_server;
        server_name _;
        root /run/code/public;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        charset utf-8;

        # Cloud Run trusted proxy
        set_real_ip_from 169.254.0.0/16;
        real_ip_header X-Forwarded-For;

        # Specifies the maximum accepted body size of a client request, as
        # indicated by the request header Content-Length. If the stated content
        # length is greater than this size, then the client receives the HTTP
        # error code 413. Set to 0 to disable. Default is '1m'.
        client_max_body_size 100m;
        set $php_value "post_max_size=100M\nupload_max_filesize=100M";

        index index.php;
        error_page 404 /index.php;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php$ {
            try_files $uri =404;
            include fastcgi_params;

            fastcgi_buffering off;
            fastcgi_param PHP_VALUE $php_value;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_pass unix:/run/php-fpm.sock;
        }

        # Deny access to . (dot) files
        location ~ /\. { return 404; }
    }
}
